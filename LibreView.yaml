openapi: 3.0.1
x-stoplight:
  id: 5e6m44bnx0m4p
info:
  title: LibreView Unofficial
  version: '1.0'
  description: >-
    This is community-driven, unofficial documentation for the LibreView API.
    It is not affiliated with Abbott Diabetes Care, Inc. or any of its subsidiaries.
  contact:
    url: 'https://github.com/FokkeZB/libreview-unofficial'
    name: LibreView Unofficial API Documentation
    email: libreview.unofficial@icloud.com
  termsOfService: 'https://github.com/FokkeZB/libreview-unofficial#disclaimer'
  license:
    name: MIT
    url: 'https://spdx.org/licenses/MIT.html'
externalDocs:
  url: 'https://libreview-unofficial.stoplight.io/'
  description: Stoplight documentation
servers:
  - url: 'https://api.libreview.io'
    description: Live Server
  - url: 'https://api-{region}.libreview.io'
    description: Live Regional Server
    variables:
      region:
        default: us
        description: Regional API to use.
  - url: 'https://libreview-proxy.onrender.com/{region}'
    description: Proxy Regional Server
    variables:
      region:
        default: us
        description: Regional API to use.
  - url: 'https://libreview-proxy.onrender.com/ae'
    description: Proxy Server (ae)
  - url: 'https://libreview-proxy.onrender.com/ap'
    description: Proxy Server (ap)
  - url: 'https://libreview-proxy.onrender.com/ca'
    description: Proxy Server (ca)
  - url: 'https://libreview-proxy.onrender.com/de'
    description: Proxy Server (de)
  - url: 'https://libreview-proxy.onrender.com/eu'
    description: Proxy Server (eu)
  - url: 'https://libreview-proxy.onrender.com/eu2'
    description: Proxy Server (eu2)
  - url: 'https://libreview-proxy.onrender.com/fr'
    description: Proxy Server (fr)
  - url: 'https://libreview-proxy.onrender.com/jp'
    description: Proxy Server (jp)
  - url: 'https://libreview-proxy.onrender.com/us'
    description: Proxy Server (us)
  - url: 'https://libreview-proxy.onrender.com/au'
    description: Proxy Server (au)
paths:
  /llu/auth/login:
    post:
      summary: Log in
      operationId: post-llu-auth-login
      description: Log in to retrieve an Bearer token to use for the other endpoints.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          $ref: '#/components/responses/Login'
  /auth/continue/tou:
    post:
      summary: Accept Terms
      operationId: post-auth-continue-tou
      description: Accept the Terms Of Use (TOU).
      parameters:
        - $ref: '#/components/parameters/Product'
        - $ref: '#/components/parameters/Version'
      responses:
        '200':
          $ref: '#/components/responses/User'
  /user:
    get:
      summary: Get User
      operationId: get-user
      description: Get the logged in user data.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
      responses:
        '200':
          $ref: '#/components/responses/User'
  /account:
    get:
      summary: Get Account
      operationId: get-account
      description: Get the account of the logged in user.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                  ticket:
                    type: object
  /llu/connections:
    get:
      summary: Get Connections
      operationId: get-connections
      description: Retrieve the connections of the user.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
      responses:
        '200':
          description: Connections Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                  ticket:
                    type: object
  '/llu/connections/{patientId}/graph':
    get:
      summary: Get Graph
      operationId: get-patient-graph
      description: Get Graph data.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
        - name: patientId
          in: path
          required: true
          schema:
            type: string
          description: Patient ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
                  ticket:
                    type: object
  '/llu/connections/{patientId}/logbook':
    get:
      summary: Get Logbook
      operationId: get-patient-logbook
      description: Get Logbook data.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
        - name: patientId
          in: path
          required: true
          schema:
            type: string
          description: Patient ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                  ticket:
                    type: object
  '/llu/notifications/settings/{connectionId}':
    get:
      summary: Get Notification Settings
      operationId: get-notification-settings
      description: Get notification settings for a connection.
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
        - name: connectionId
          in: path
          required: true
          schema:
            type: string
          description: Connection ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
                  ticket:
                    type: object
  /llu/config/country:
    get:
      summary: Get Config
      operationId: get-country-config
      description: Get configuration data.
      security: []
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/Product'
        - name: country
          in: query
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{2}$'
          example: NL
          description: Country identifier to get config for.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
components:
  parameters:
    Version:
      name: version
      in: header
      required: true
      schema:
        type: string
        example: '4.7'
        default: '4.7'
      description: The LibreLinkUp version number to match.
    Product:
      name: product
      in: header
      required: true
      schema:
        type: string
        example: llu.android
        default: llu.android
      description: The LibreLinkUp product identifier to match.
  securitySchemes:
    token:
      type: http
      scheme: bearer
      description: Bearer token authentication
  responses:
    LoginRedirect:
      description: The response is a request to use a different region to retry login.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                default: 0
                readOnly: true
              data:
                type: object
                properties:
                  redirect:
                    type: boolean
                    default: true
                    readOnly: true
                  region:
                    type: string
    User:
      description: Log in is successful and terms have been accepted.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              data:
                type: object
                properties:
                  user:
                    type: object
                  messages:
                    type: object
                  notifications:
                    type: object
                  authTicket:
                    type: object
                    properties:
                      token:
                        type: string
                      expires:
                        type: integer
                      duration:
                        type: integer
                  invitations:
                    type: array
                    items:
                      type: string
                      description: List of invitation identifiers
                  trustedDeviceToken:
                    type: string
    LoginTerms:
      description: Login is successful but terms need to be accepted first.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                enum: [4]
                default: 4
                readOnly: true
              data:
                type: object
                properties:
                  step:
                    type: object
                  user:
                    type: object
                  authTicket:
                    type: object
    Login:
      description: Login response can be success, redirect, or terms acceptance required.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/responses/User'
              - $ref: '#/components/responses/LoginRedirect'
              - $ref: '#/components/responses/LoginTerms'
security:
  - token: []
